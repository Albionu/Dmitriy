@mixin container {
    width: 100%;
    max-width: $container-width;
    padding-left: $p-medium;
    padding-right: $p-medium;
    margin: auto;
}

@mixin fontSize ($fontSize, $lineHeight) {
    font-size: $fontSize / $baseFontSize * 1rem;
    line-height: $lineHeight / $baseFontSize * 1rem;
}

@mixin container-md {
    width: 100%;
    max-width: $container-width-md;
    padding-left: $p-small;
    padding-right: $p-small;
    margin: auto;
}

@function vw($px-vw) {
    @if type-of($px-vw)=='number' and index('px', unit($px-vw)) !=null {
        @return ($px-vw * 100vw) / $base-vw;
    }
    @else {
        @return auto;
    }
}

@mixin up-vw($property, $value, $fallback: false) {
    @media screen and (min-width: $breakpoint-to-fluid) {
        #{$property}: vw($value);
    }
}

@mixin padding-vw($top, $right:false, $bottom:false, $left:false) {
    @if $right==false {
        @include up-vw(padding, $top);
    }
    @else if $bottom==false {
        @include up-vw(padding-top, $top);
        @include up-vw(padding-bottom, $top);
        @include up-vw(padding-left, $right);
        @include up-vw(padding-right, $right);
    }
    @else {
        @include up-vw(padding-top, $top);
        @include up-vw(padding-bottom, $bottom);
        @include up-vw(padding-left, $left);
        @include up-vw(padding-right, $right);
    }
}

@mixin border-radius-vw($top-left, $top-right:false, $bottom-right:false, $bottom-left:false) {
    @if $top-right==false {
        @include up-vw(border-radius, $top-left);
    }
    @else if $bottom-right==false {
        @include up-vw(border-top-left-radius, $top-left);
        @include up-vw(border-bottom-left-radius, $top-left);
        @include up-vw(border-top-right-radius, $top-right);
        @include up-vw(border-bottom-right-radius, $top-right);
    }
    @else {
        @include up-vw(border-top-left-radius, $top-left);
        @include up-vw(border-bottom-right-radius, $bottom-right);
        @include up-vw(border-bottom-left-radius, $bottom-left);
        @include up-vw(border-top-right-radius, $top-right);
    }
}

@mixin margin-vw($top, $right:false, $bottom:false, $left:false) {
    @if $right==false {
        @include up-vw(margin, $top);
    }
    @else if $bottom==false {
        @include up-vw(margin-top, $top);
        @include up-vw(margin-bottom, $top);
        @include up-vw(margin-left, $right);
        @include up-vw(margin-right, $right);
    }
    @else {
        @include up-vw(margin-top, $top);
        @include up-vw(margin-bottom, $bottom);
        @include up-vw(margin-left, $left);
        @include up-vw(margin-right, $right);
    }
}

@function strip-unit($number) {
    @if type-of($number)=='number' and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }
    @return $number;
}

@function calcFluidFontSize($f-min, $f-max, $w-min, $w-max, $units: px) {
    $f-min: strip-unit($f-min);
    $f-max: strip-unit($f-max);
    $w-min: strip-unit($w-min);
    $w-max: strip-unit($w-max);
    $k: ($f-max - $f-min)/($w-max - $w-min);
    $b: $f-min - $k * $w-min;
    $b: $b + $units;
    @return calc( #{$k} * 100vw + #{$b});
}

@mixin fluidFontSize($f-min, $f-max, $w-min, $w-max, $fallback: false) {
    font-size: $f-min;
    @media (min-width: $w-min) {
        @if ($fallback) {
            font-size: $fallback;
        }
        font-size: calcFluidFontSize($f-min, $f-max, $w-min, $w-max, px);
    }
    @media (min-width: $w-max) {
        font-size: $f-max;
    }
}

@mixin fluid($property, $f-min, $f-max, $w-min, $w-max, $fallback: false) {
    #{$property}: $f-min;
    @media (min-width: $w-min) {
        @if ($fallback) {
            #{$property}: $fallback;
        }
        #{$property}: calcFluidFontSize($f-min, $f-max, $w-min, $w-max, px);
    }
    @media (min-width: $w-max) {
        #{$property}: $f-max;
    }
}

@mixin fluidWidth($f-min, $f-max, $w-min, $w-max, $fallback: false) {
    width: $f-min;
    @media (min-width: $w-min) {
        @if ($fallback) {
            width: $fallback;
        }
        width: calcFluidFontSize($f-min, $f-max, $w-min, $w-max, px);
    }
    @media (min-width: $w-max) {
        width: $f-max;
    }
}

@mixin fluidHeight($f-min, $f-max, $w-min, $w-max, $fallback: false) {
    height: $f-min;
    @media (min-width: $w-min) {
        @if ($fallback) {
            height: $fallback;
        }
        height: calcFluidFontSize($f-min, $f-max, $w-min, $w-max, px);
    }
    @media (min-width: $w-max) {
        height: $f-max;
    }
}